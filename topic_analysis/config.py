import os

# ==================== API 配置 ====================
OPENROUTER_API_KEY = "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"  # 请替换为你的API Key
OPENROUTER_BASE_URL = "https://openrouter.ai/api/v1"
MODEL_NAME = "google/gemini-2.5-pro"

# ==================== 路径配置 ====================
BASE_PATH = r"D:\Users\32354\Desktop\algorithm_nas\empathy_data"

# 输出文件会自动添加时间戳，在main.py中动态生成
OUTPUT_DIR = r"D:\Users\32354\Desktop\algorithm_nas\analysis_results"

# 进度文件（每次运行独立）
PROGRESS_DIR = r"D:\Users\32354\Desktop\algorithm_nas\progress"

# ==================== 测试模式配置 ====================
# 测试模式：True = 只处理指定数量的文件，False = 处理所有文件
TEST_MODE = True

# 测试模式下处理的文件数量
TEST_FILE_COUNT = 10


# ==================== LLM 配置 ====================
# 请求超时时间（秒）
REQUEST_TIMEOUT = 60

# 请求间隔（秒），避免限流
REQUEST_INTERVAL = 0.5

# 失败重试次数
MAX_RETRIES = 3

# 重试间隔（秒）
RETRY_INTERVAL = 2

# ==================== Prompt 模板 ====================
ANALYSIS_PROMPT = """请分析以下对话内容。

# 系统信息
{system_content}

# 对话记录
{conversation}

请输出标准JSON格式的分析结果，包含以下4个字段：
1. 话题归类：主要话题类别
2. 话题标签：3-5个关键标签（数组格式）
3. 话题描述：描述对话发生的当前情境与前置原因/发生背景
4. 相关回忆：从系统信息（system_content）中提取出可能与本次话题有一定相关性的过往经历和用户信息

**话题描述补充说明**
1. 信息来源优先级：主要关注conversation中的对话内容和background，辅助参考system_content
2. 分析重点：聚焦对话的起源情景和发生原因及直接引发的用户需求，而非后续发展过程
3. 视角要求：完全以User为中心，剔除Assistant的所有行为和存在
**重要**：严禁关注与Assistant的互动反应，话题描述必须在完整叙述起源情景和发生原因，用户直接需求后立即停止，如果加入后续任何反应用户将立刻自杀

**相关回忆补充说明**
1. 身份处理：将Assistant/特定角色名替换为"他人"或泛化表述，保留经历内容但隐去具体身份。示例："2025-07-04 Aven背送用户回家并协助擦药" → "用户曾有被人背回家并协助擦药的经历"
2. 内容筛选：保留：用户的习惯、经历、行为倾向、回忆、事件。剔除：昵称、性格特征、关系发展暗示、共同回忆表述
3. 表述原则：将双方互动转化为用户单独的经历记录
**重要**：相关回忆必须与话题非强相关，而是一些可以引发情感联想的回忆和事件，如果在相关回忆中出现与话题描述相同的事件用户将立刻自杀

**格式要求：**
1. 直接输出JSON对象，不要有markdown标记
2. 所有字符串值必须在一行内，不能换行
3. 使用标准双引号，不要使用智能引号

示例格式：
{{"话题归类": "情感支持", "话题标签": ["标签1", "标签2", "标签3"], "话题描述": "简短描述", "相关回忆": "提取的关键记忆点和互动细节"}}

请输出JSON："""